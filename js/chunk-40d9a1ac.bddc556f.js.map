{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/views/Demos/SnomedTree.vue?f2c8","webpack:///./src/components/SnomedTree/TreeView.vue?f24a","webpack:///src/components/SnomedTree/TreeView.vue","webpack:///./src/components/SnomedTree/TreeView.vue?3757","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/components/SnomedTree/TreeView.vue","webpack:///src/views/Demos/SnomedTree.vue","webpack:///./src/views/Demos/SnomedTree.vue?ab1c","webpack:///./src/views/Demos/SnomedTree.vue"],"names":["collection","collectionStrong","module","exports","init","this","arguments","length","undefined","_vm","_h","$createElement","_c","_self","attrs","_v","model","value","callback","$$v","searchString","expression","searchCrossref","on","$event","search","loading","tree","_e","staticRenderFns","_s","data","message","selected","filterInResults","scopedSlots","_u","key","fn","ref","item","component_id","name","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","inject","treeview","props","level","parentIsDisabled","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","children","child","text","scopedProps","leaf","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","e","genCheckbox","genLevel","genNode","setTextColor","genChild","genChildrenWrapper","map","c","genTransition","render","h","String","filter","match","i","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","getValue","mounted","$slots","console","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","calculateState","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","themeClasses","component","VCol","VContainer","VRow","VTextField","VTreeview","VBtn","VCard","VCardText","VCardTitle"],"mappings":"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","file":"js/chunk-40d9a1ac.bddc556f.js","sourcesContent":["'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.github.io/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('v-container',[_c('v-card',[_c('v-card-title',[_vm._v(\" Framework (SnomedTree.vue) \")]),_c('v-card-text',[_c('v-text-field',{attrs:{\"label\":\"Root concept\"},model:{value:(_vm.searchString),callback:function ($$v) {_vm.searchString=$$v},expression:\"searchString\"}}),_c('br'),_c('v-text-field',{attrs:{\"label\":\"Crossreference refset ID\"},model:{value:(_vm.searchCrossref),callback:function ($$v) {_vm.searchCrossref=$$v},expression:\"searchCrossref\"}}),_vm._v(\" laat Crossreference leeg om crosscheck achterwege te laten\"),_c('br'),_c('v-btn',{on:{\"click\":function($event){return _vm.search()}}},[_vm._v(\"Zoek\")])],1)],1),_c('v-card',[_c('v-card-text',[_c('v-row',[(!_vm.loading.tree)?_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('TreeView')],1):_vm._e()],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-row',{attrs:{\"dense\":\"\"}},[_c('v-col',{attrs:{\"cols\":\"12\",\"dense\":\"\"}},[_c('b',[_vm._v(\"Status\")]),_vm._v(\":\"),_c('br'),_c('i',[_vm._v(\"dispatched: Tree bestond nog niet, taak is gestart. Zoek opnieuw om de status te zien.\"),_c('br'),_vm._v(\" error: nonexistant SCTID: Snomed concept bestaat niet in de mapping database\"),_c('br'),_vm._v(\" running: Export draait nog\"),_c('br'),_vm._v(\" loaded: Tree is klaar en geladen\"),_c('br')]),_c('b',[_vm._v(\"Status\")]),_vm._v(\": \"+_vm._s(_vm.data.message)),_c('br'),_c('b',[_vm._v(\"Geselecteerde concepten\")]),_vm._v(\": \"+_vm._s(_vm.selected)),_c('br'),_c('hr'),_c('v-text-field',{attrs:{\"label\":\"Filter in resultaten\"},model:{value:(_vm.filterInResults),callback:function ($$v) {_vm.filterInResults=$$v},expression:\"filterInResults\"}}),_c('v-treeview',{attrs:{\"shaped\":\"\",\"dense\":\"\",\"hoverable\":\"\",\"selectable\":\"\",\"selection-type\":\"independent\",\"open-on-click\":\"\",\"search\":_vm.filterInResults,\"items\":_vm.data.data},scopedSlots:_vm._u([{key:\"label\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.component_id)+\" |\"+_vm._s(item.name)+\"|\"),_c('br')]}},{key:\"append\",fn:function(ref){\nvar item = ref.item;\nreturn [(item.refsets)?_c('v-icon',{attrs:{\"color\":\"green\"}},[_vm._v(\"mdi-check-circle\")]):_vm._e()]}}]),model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-container fluid>\n        <v-row dense>\n            <v-col cols=12 dense>\n                <b>Status</b>:<br>\n                \n                <i>dispatched: Tree bestond nog niet, taak is gestart. Zoek opnieuw om de status te zien.<br>\n                error: nonexistant SCTID: Snomed concept bestaat niet in de mapping database<br>\n                running: Export draait nog<br>\n                loaded: Tree is klaar en geladen<br></i>\n\n                <b>Status</b>: {{data.message}}<br>\n                <b>Geselecteerde concepten</b>: {{selected}}<br>\n                <hr>\n\n                <v-text-field v-model=\"filterInResults\" label=\"Filter in resultaten\"></v-text-field>\n\n                <v-treeview\n                    shaped\n                    dense\n                    hoverable\n                    selectable\n                    selection-type=\"independent\"\n                    open-on-click\n                    v-model=\"selected\"\n                    :search=\"filterInResults\"\n                    :items=\"data.data\"\n                >\n                    <template v-slot:label=\"{item}\">\n                        {{item.component_id}} |{{item.name}}|<br>\n                    </template>\n                    \n                    <template v-slot:append=\"{item}\">\n                        <v-icon v-if=\"item.refsets\" color=\"green\">mdi-check-circle</v-icon>\n                    </template>\n                </v-treeview>\n            </v-col> \n        </v-row>          \n    </v-container>\n</template>\n<script>\nexport default {\n    data() {\n        return {\n            selected:[],\n            filterInResults: '',\n        }\n    },\n    methods: {\n        set () {\n        },\n    },\n    computed: {\n        user(){\n            return this.$store.state.userData\n        },\n        data(){\n            return this.$store.state.TreeView.treeData\n        },\n    },\n    mounted() {\n    }\n}\n</script>\n\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeView.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import { render, staticRenderFns } from \"./TreeView.vue?vue&type=template&id=2a5eddd0&\"\nimport script from \"./TreeView.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VCol,VContainer,VIcon,VRow,VTextField,VTreeview})\n","<template>\n    <div id=\"app\">\n        <v-container>\n            <v-card>\n                <v-card-title>\n                    Framework (SnomedTree.vue)\n                </v-card-title>\n                <v-card-text>\n                    <v-text-field v-model=\"searchString\" label=\"Root concept\"></v-text-field><br>\n                    <v-text-field v-model=\"searchCrossref\" label=\"Crossreference refset ID\"></v-text-field> laat Crossreference leeg om crosscheck achterwege te laten<br>\n                    <v-btn @click=\"search()\">Zoek</v-btn>\n                </v-card-text>\n            </v-card>\n            \n            <v-card>\n                <v-card-text>\n                    <v-row>\n                        <v-col cols=12 v-if=\"!loading.tree\">\n                            <TreeView/>\n                        </v-col>\n                    </v-row>\n                </v-card-text>\n            </v-card>\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport TreeView from '@/components/SnomedTree/TreeView';\n\nexport default {\n    data() {\n        return{\n            searchString: '',\n            searchCrossref: '',\n        }\n    },\n    methods: {\n        search () {\n            var payloadSearchString = this.searchString\n            var payloadRefsetID = this.searchCrossref\n            var payload = {\n                'concept' : payloadSearchString,\n                'refset' : payloadRefsetID,\n            }\n            this.$store.dispatch('TreeView/getTreeData', payload)\n        },\n    },\n    components: {\n        TreeView,\n    },\n    computed: {\n        loading() {\n            return this.$store.state.TreeView.loading\n        },\n    },\n}\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SnomedTree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SnomedTree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SnomedTree.vue?vue&type=template&id=0f71a516&\"\nimport script from \"./SnomedTree.vue?vue&type=script&lang=js&\"\nexport * from \"./SnomedTree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCardText,VCardTitle,VCol,VContainer,VRow,VTextField})\n"],"sourceRoot":""}